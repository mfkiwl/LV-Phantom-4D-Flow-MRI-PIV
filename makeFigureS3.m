% Copyright (c) 2020 Philip A Corrado, University of Wisconsin-Madison
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in all
% copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
% SOFTWARE.

% This script reproduces figure S5 from the manuscript, which assesses the
% repeatability between successive heartbeats of the PIV acquisition and
% between MRI scanning days for each scan time and trajectory.

clear all; close all; %#ok<CLALL>

% Choose which image sets to compare. Compare column 2 vs column 1.
datasets = [...
    "E:\PIV Data\Unregistered\Heartbeat 1", "E:\PIV Data\Unregistered\Heartbeat 2";...
    "E:\PIV Data\Unregistered\Heartbeat 1", "E:\PIV Data\Unregistered\Heartbeat 3";...
    "E:\PIV Data\Unregistered\Heartbeat 1", "E:\PIV Data\Unregistered\Heartbeat 4";...
    "E:\PIV Data\Unregistered\Heartbeat 2", "E:\PIV Data\Unregistered\Heartbeat 3";...
    "E:\PIV Data\Unregistered\Heartbeat 2", "E:\PIV Data\Unregistered\Heartbeat 4";...
    "E:\PIV Data\Unregistered\Heartbeat 3", "E:\PIV Data\Unregistered\Heartbeat 4";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC VIPR\30_Minutes","E:\MRI_Data\Day 2\PC VIPR\30_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC VIPR\20_Minutes","E:\MRI_Data\Day 2\PC VIPR\20_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC VIPR\10_Minutes","E:\MRI_Data\Day 2\PC VIPR\10_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC VIPR\5_Minutes","E:\MRI_Data\Day 2\PC VIPR\5_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC VIPR\2.5_Minutes","E:\MRI_Data\Day 2\PC VIPR\2.5_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC SOS\30_Minutes","E:\MRI_Data\Day 2\PC SOS\30_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC SOS\20_Minutes","E:\MRI_Data\Day 2\PC SOS\20_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC SOS\10_Minutes","E:\MRI_Data\Day 2\PC SOS\10_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC SOS\5_Minutes","E:\MRI_Data\Day 2\PC SOS\5_Minutes";...
    "E:\MRI_Data\Day1RegisteredToDay2\PC SOS\2.5_Minutes","E:\MRI_Data\Day 2\PC SOS\2.5_Minutes"];

masks = ["E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Unregistered\Average Beat\MAG.nii";...
         "E:\PIV Data\Registered to Day 2\PC VIPR\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC VIPR\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC VIPR\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC VIPR\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC VIPR\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC SOS\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC SOS\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC SOS\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC SOS\MASK.nii";...
         "E:\PIV Data\Registered to Day 2\PC SOS\MASK.nii"];

rowNum = [1:6,8:17]';

T = table('Size',[17,3],'VariableTypes',{'string','string','string'},...
'VariableNames',{'RMSE','Speed_Corr_Coeff','Speed_CoV'});

% Loop through PIV and MRI datasets and populate table with RMSE,
% correlation coefficient, and coefficient of variation.
for row=1:size(datasets,1)
    vRMSE(row) = compareFlowDataSets(masks(row),datasets(row,1),datasets(row,2),0); %#ok<SAGROW>
    T(rowNum(row),1) = {sprintf('%2.1f',vRMSE(row)/10)};
    [r(row),~,~,~,CoV(row),~,~,~] = computeSpeedBlandAltman(masks(row),datasets(row,1),datasets(row,2),0); %#ok<SAGROW>
    T(rowNum(row),2) = {sprintf('%2.2f',r(row))};
    T(rowNum(row),3) = {sprintf('%2.0f',CoV(row))};
end

T(7,1) = {sprintf('%2.1f (%2.1f)',mean(vRMSE(1:6))/10,std(vRMSE(1:6)/10))};
T(7,2) = {sprintf('%2.2f (%2.2f)',mean(r(1:6)),std(r(1:6)))};
T(7,3) = {sprintf('%2.0f (%2.0f)',mean(CoV(1:6)),std(CoV(1:6)))};
disp(T)
